---
name: xbash
on:
  schedule:
    - cron: "30 6 * * *"
  push:
    branches: ["master"]
    paths:
      - "docker/**"
      - ".github/workflows/**"
  pull_request:
    branches: ["master"]
    paths:
      - "docker/**"
      - ".github/workflows/**"

env:
  NAME_TAG: rootshellcoder/xbash:5.2.21-alpine3.19
  LATEST_TAG: rootshellcoder/xbash:latest
  VER_LOG: version_latest.txt

jobs:
  test:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build Test
        run: docker build -f docker/Dockerfile .

  push:
    needs: [test]
    name: Publish to Docker Hub
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: docker
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.LATEST_TAG }}
            ${{ env.NAME_TAG }}

  check:
    needs: [push]
    name: Pull image
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Create report file
        run: |
          echo "BUILD TIME" > ${{ env.VER_LOG }}
          date +%s >> ${{ env.VER_LOG }}
          echo "" >> ${{ env.VER_LOG }}
      - name: Check version
        run: |
          docker pull ${{ env.LATEST_TAG }}
          echo "- OS RELEASE"  >> ${{ env.VER_LOG }}
          docker run -i --rm  ${{ env.LATEST_TAG }} cat /etc/os-release >> ${{ env.VER_LOG }}
          echo "" >> ${{ env.VER_LOG }}

          echo "- BASH VERSION"  >> ${{ env.VER_LOG }}
          docker run -i --rm  ${{ env.LATEST_TAG }} bash --version >> ${{ env.VER_LOG }}
          echo "" >> ${{ env.VER_LOG }}

          echo "- JQ VERSION"  >> ${{ env.VER_LOG }}
          docker run -i --rm  ${{ env.LATEST_TAG }} jq --version >> ${{ env.VER_LOG }}
          echo "" >> ${{ env.VER_LOG }}

          echo "- GIT VERSION"  >> ${{ env.VER_LOG }}
          docker run -i --rm  ${{ env.LATEST_TAG }} git --version >> ${{ env.VER_LOG }}
          echo "" >> ${{ env.VER_LOG }}

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: RootShell-coder
          author_email: Root.Shelling@gmail.com
          message: "upd"
          add: "version*"
